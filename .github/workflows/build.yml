name: Build and Push

# Security: Explicit permissions for GITHUB_TOKEN
permissions:
  contents: read
  packages: write
  security-events: write
  id-token: write

# Concurrency: Prevent multiple builds for the same ref
concurrency:
  group: build-${{ github.ref_name }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  release:
    types:
      - published
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/web

defaults:
  run:
    shell: bash

jobs:
  build-and-push:
    name: Build, Scan, and Push Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          # Fetch full history for better cache hits
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
        with:
          # Enable advanced BuildKit features
          buildkitd-flags: --debug

      - name: Log in to Container Registry
        uses: docker/login-action@v3.6.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto
          tags: |
            type=ref,event=pr
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,format=short,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=Hourly Web
            org.opencontainers.image.description=GitLab commits ↔ Jira issues → monthly hours reconciliation
            org.opencontainers.image.vendor=Hourly

      - name: Extract version
        id: version
        run: |
          # If it's a release with a tag, use the tag name
          if [[ "${{ github.event_name }}" == "release" && -n "${{ github.event.release.tag_name }}" ]]; then
            VERSION="${{ github.event.release.tag_name }}"
            # Remove 'v' prefix if present
            VERSION="${VERSION#v}"
          # If it's a tag push, use the tag name
          elif [[ "${{ github.ref_type }}" == "tag" ]]; then
            VERSION="${{ github.ref_name }}"
            VERSION="${VERSION#v}"
          else
            # Otherwise use short commit SHA
            VERSION="${{ github.sha }}"
            VERSION="${VERSION:0:7}"
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Building version: ${VERSION}"

      - name: Build Docker image
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: false
          load: true
          target: runtime
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:scan
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.version.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Security: Use BuildKit secret mounts for sensitive data if needed
          # secrets: |
          #   "npm_token=${{ secrets.NPM_TOKEN }}"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:scan
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          # Fail on critical/high vulnerabilities
          exit-code: '0'
          vuln-type: 'os,library'
          scanners: 'vuln,secret,misconfig'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'trivy-container-scan'

      - name: Run Trivy vulnerability scanner (table output)
        uses: aquasecurity/trivy-action@0.33.1
        if: always()
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:scan
          format: 'table'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
          vuln-type: 'os,library'
          scanners: 'vuln,secret,misconfig'

      - name: Build and push Docker image (multi-platform)
        uses: docker/build-push-action@v6.18.0
        if: success()
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          target: runtime
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.version.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Enable provenance and SBOM attestations
          provenance: true
          sbom: true
          # Security: Build reproducibly
          outputs: type=image,name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},push=true

      - name: Generate build summary
        if: always()
        run: |
          echo "## Docker Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** \`${{ steps.version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Platforms:** linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Security Scan:** See Security tab for vulnerability details" >> $GITHUB_STEP_SUMMARY
